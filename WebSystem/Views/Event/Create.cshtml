@using WebSystem.Models.Outlook

@model ABMEventModel
@{
    ViewData["Title"] = "Nuevo Evento";
    Layout = "~/Views/Shared/_PrincipalSitie.cshtml";
}

<style media="screen">
    #uploadForm,
    #imagePreview {
        width: 720px;
        margin: 0 auto;
    }

    img {
        max-width: 250px;
        height: auto;
    }
</style>

<div class="row">
    <div class="col-lg-8 col-md-10 col-sm-12 col-xs-12">
        <h3>Nuevo Evento</h3>
        @using (Html.BeginForm("CreateEvent", "Event", new {}, FormMethod.Post, false, new { id = "idFormCreate", @class = "form-horizontal", role = "form" }))
        {

        <div class="form-group">
            <input id="idHiddenToken" name="nHiddenToken" type="hidden" value="@Model.AccessToken">
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label" for="UserNameText">Titulo</label>
            <input class="form-control" data-val="true" id="idInputTitulo" name="nInputTitulo" placeholder="" type="text" value="">
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label" for="UserNameText">Detalles</label>
            <input class="form-control" data-val="true" id="idInputDetalles" name="nInputDetalles" placeholder="" type="text" value="">
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label" for="UserNameText">Inicia</label>
            <input class="form-control" id="idInputInicia" name="nInputInicia" type="datetime-local">
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label" for="UserNameText">Finaliza</label>
            <input class="form-control" id="idInputFinaliza" name="nInputFinaliza"  type="datetime-local">
        </div>

         <div class="form-group">
            <button class="btn btn-primary" type="submit" id="idButtonCreate">Guardar</button>
            <button class="btn btn-secondary" type="button" id="idButtonReturn">Volver</button>
        </div>
        }

    </div>
</div>

<div class="modal fade modal-slide-in-right" aria-hidden="true" role="dialog" tabindex="-1" id="modal-error">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h4 class="modal-title">Error</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Se produjo un error al realizar la solicitud de modificación. Detalles:</p>
                <p id="idModalErrorMessage">-.-</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    
jQuery(document).ready(function () {
    if ('@Model.ErrorMessage' !== ''){
        LanzarModalError('@Model.ErrorMessage');
    }
});

$('#idButtonReturn').on('click', function () {
    location.href = "https://localhost:7169/Event?accessToken=@Model.AccessToken";
});

var LanzarModalError = function (errorMessage) {
    $("#idModalErrorMessage").html(errorMessage);
    $("#modal-error").modal("show");
};


var ValidateData = function() {
    var errorColection = "";

    

    if ($("#idInputTitulo").val() == "")
        errorColection = errorColection + "Se debe agregar el Título del Evento.<br>";

    if ($("#idInputInicia").val() == "")
        errorColection = errorColection + "Se debe agregar la Fecha de Inicio del Evento.<br>";

    if ($("#idInputFinaliza").val() == "")
        errorColection = errorColection + "Se debe agregar la Fecha de Fin del Evento.<br>";

    if ($("#idInputInicia").val() !== "" && $("#idInputFinaliza").val() !== "")
    {
        var startDate = Date.parse($("#idInputInicia").val());
        var endDate = Date.parse($("#idInputFinaliza").val());
        if (startDate > endDate)
            errorColection = errorColection + "La fecha de Inicio no debe ser superior a la fecha de Fin.<br>";
    }

    return errorColection;
}


$("#idFormCreate").submit(function (event) {
    debugger;
    var errors = ValidateData();
    if (errors !== "")
    {
        LanzarModalError(errors);
        return false;
    }
});

/*
$('#idButtonCreate').on('click', function () {

    let request = {
        calendarEvent: {
            Subject: $('#idInputTitulo').val(),
            Body: {
                Content: $('#idInputDetalles').val()
            },
            Start: {
                DateTime: $('#idInputInicia').val()
            },
            End: {
                DateTime: $('#idInputFinaliza').val()
            }
        }
    };

    $.ajax({
        type: "GET",
        headers: {
            "Accept": "application/json",
            "Content-Type": "application/json"
        },
        dataType: "json",
        url: 'https://localhost:7169/Event/CreateEvent',
        data: JSON.stringify(request)
        ,
        error: function () {
            alert("Cant Access at all");
        },
        success: function (operationState) {
            if (operationState === true) {
                alert("Finaly :)");
            }
            else {
                alert("Still not set parameters");
            }
        }
    });
    */
    /*
    $.ajax({
        url: 'https://localhost:7169/Event/CreateEvent',
        type: 'GET',
        dataType: 'json',
        contentType: "application/json;charset=UTF-8",
        data: JSON.stringify(data),
        success: function (data) {
            console.log(data);
            //location.href = '/AllEvents';
        }
    });*/
    //let request = {
        //accessToken: Global_GetCookie('_accessToken'),
    //    calendarEvent = {
    //        Id: "",
    //        Subject: $('#idInputTitulo').val(),
    //        Body: {
    //            ContentType: "text",
    //            Content: $('#idInputDetalles').val()
    //        },
    //        Start: {
    //            DateTime: $('#idInputInicia').val(),
    //            TimeZone: "UTC"
    //        },
    //        End: {
    //            DateTime: $('#idInputFinaliza').val(),
    //            TimeZone: "UTC"
    //        }
    //    //}
    //};

    //$.ajax({
    //    type: 'GET',
    //    url: 'https://localhost:7169/Event/CreateEvent',
    //    data: JSON.stringify(calendarEvent),
    //    dataType: 'json',
    //    contentType: 'application/json; charset=utf-8',
    //    success: function (response) {
    //        if (response.statusCode == 200){
    //            location.href = JSON.parse(response.content).redirectUrl;
    //        }
    //    }
    //});

    /*
    $.ajax({
        url: 'https://localhost:5001/api/v1/Event/CreateEvent',
        type: 'POST',
        async: true,
        dataType: 'json',
        contentType: 'application/json',
        data: JSON.stringify(scalendarEvent),
        success: function (response) {
            if (response.statusCode == 200){
                //location.href = JSON.parse(response.content).redirectUrl;
            }
        }
    });
    */


</script>